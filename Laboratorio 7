// Declaramos los pines de conexión del display
const int pins[] = {2, 3, 4, 5, 6, 7, 8};

// Declaramos los números para el cátodo común
const byte numbersDisplayCatode[10] = {
  B1000000, // 0
  B1111001, // 1
  B0100100, // 2
  B0110000, // 3
  B0011001, // 4
  B0010010, // 5
  B0000010, // 6
  B1111000, // 7
  B0000000, // 8
  B0010000  // 9
};

void setup() {
  // Ponemos los pines como salida
  for(int i = 0; i < 7; i++) {
    pinMode(pins[i], OUTPUT);
  }
  // Iniciamos el display en 0
  lightSegments(0);
}

void loop() {
  for(int i = 0; i < 10; i++) {
    lightSegments(i);
    delay(1000);
  }
}

/**
 * Esta función permite encender el segmento con el número pasado como argumento
 *
 * int number: Número del 0 al 9
 */
void lightSegments(int number) {
  byte numberBit = numbersDisplayCatode[number];
  for (int i = 0; i < 7; i++) {
    int bit = bitRead(numberBit, i);
    digitalWrite(pins[i], !bit); // ¡Invierte el bit para el cátodo común!
  }
}
